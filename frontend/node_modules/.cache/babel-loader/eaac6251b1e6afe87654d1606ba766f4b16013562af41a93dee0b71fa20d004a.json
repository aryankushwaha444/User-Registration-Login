{"ast":null,"code":"var _jsxFileName = \"/Users/aryankushwaha/Desktop/CodAvatar/2/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { authService } from \"../services/authService\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [pending2FA, setPending2FA] = useState(false);\n  const [pending2FAEmail, setPending2FAEmail] = useState(\"\");\n  useEffect(() => {\n    // Check for stored tokens on app load\n    const tokens = authService.getTokens();\n    if (tokens.access) {\n      authService.getProfile().then(userData => {\n        setUser(userData);\n      }).catch(() => {\n        authService.logout();\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      if (response.requires_2fa) {\n        setPending2FA(true);\n        setPending2FAEmail(email);\n        return {\n          requires2FA: true\n        };\n      }\n      setUser(response.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Login failed\");\n      throw error;\n    }\n  };\n  const verify2FA = async (token, isBackupCode = false) => {\n    try {\n      const response = await authService.verify2FALogin(pending2FAEmail, token, isBackupCode);\n      setUser(response.user);\n      setPending2FA(false);\n      setPending2FAEmail(\"\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"2FA verification failed\");\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      setUser(response.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Registration failed\");\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setUser(null);\n      setPending2FA(false);\n      setPending2FAEmail(\"\");\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const updatedUser = await authService.updateProfile(userData);\n      setUser(updatedUser);\n      toast.success(\"Profile updated successfully\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || \"Profile update failed\");\n      throw error;\n    }\n  };\n  const setup2FA = async () => {\n    try {\n      const response = await authService.setup2FA();\n      return response;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || \"2FA setup failed\");\n      throw error;\n    }\n  };\n  const verify2FASetup = async token => {\n    try {\n      const response = await authService.verify2FASetup(token);\n      setUser(response.user);\n      toast.success(\"2FA enabled successfully\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      toast.error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || \"2FA verification failed\");\n      throw error;\n    }\n  };\n  const disable2FA = async password => {\n    try {\n      const response = await authService.disable2FA(password);\n      setUser(response.user);\n      toast.success(\"2FA disabled successfully\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      toast.error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || \"Failed to disable 2FA\");\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    pending2FA,\n    pending2FAEmail,\n    login,\n    verify2FA,\n    register,\n    logout,\n    updateProfile,\n    setup2FA,\n    verify2FASetup,\n    disable2FA,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"jsTBQMUsdXeRHX1pmen5NYc3VjY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","pending2FA","setPending2FA","pending2FAEmail","setPending2FAEmail","tokens","getTokens","access","getProfile","then","userData","catch","logout","finally","login","email","password","response","requires_2fa","requires2FA","success","error","_error$response","_error$response$data","data","verify2FA","token","isBackupCode","verify2FALogin","_error$response2","_error$response2$data","register","_error$response3","_error$response3$data","console","updateProfile","updatedUser","_error$response4","_error$response4$data","setup2FA","_error$response5","_error$response5$data","verify2FASetup","_error$response6","_error$response6$data","disable2FA","_error$response7","_error$response7$data","value","changePassword","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aryankushwaha/Desktop/CodAvatar/2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { authService } from \"../services/authService\";\nimport toast from \"react-hot-toast\";\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [pending2FA, setPending2FA] = useState(false);\n  const [pending2FAEmail, setPending2FAEmail] = useState(\"\");\n\n  useEffect(() => {\n    // Check for stored tokens on app load\n    const tokens = authService.getTokens();\n    if (tokens.access) {\n      authService\n        .getProfile()\n        .then((userData) => {\n          setUser(userData);\n        })\n        .catch(() => {\n          authService.logout();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n\n      if (response.requires_2fa) {\n        setPending2FA(true);\n        setPending2FAEmail(email);\n        return { requires2FA: true };\n      }\n\n      setUser(response.user);\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"Login failed\");\n      throw error;\n    }\n  };\n\n  const verify2FA = async (token, isBackupCode = false) => {\n    try {\n      const response = await authService.verify2FALogin(\n        pending2FAEmail,\n        token,\n        isBackupCode\n      );\n      setUser(response.user);\n      setPending2FA(false);\n      setPending2FAEmail(\"\");\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"2FA verification failed\");\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authService.register(userData);\n      setUser(response.user);\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"Registration failed\");\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setUser(null);\n      setPending2FA(false);\n      setPending2FAEmail(\"\");\n    }\n  };\n\n  const updateProfile = async (userData) => {\n    try {\n      const updatedUser = await authService.updateProfile(userData);\n      setUser(updatedUser);\n      toast.success(\"Profile updated successfully\");\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"Profile update failed\");\n      throw error;\n    }\n  };\n\n  const setup2FA = async () => {\n    try {\n      const response = await authService.setup2FA();\n      return response;\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"2FA setup failed\");\n      throw error;\n    }\n  };\n\n  const verify2FASetup = async (token) => {\n    try {\n      const response = await authService.verify2FASetup(token);\n      setUser(response.user);\n      toast.success(\"2FA enabled successfully\");\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"2FA verification failed\");\n      throw error;\n    }\n  };\n\n  const disable2FA = async (password) => {\n    try {\n      const response = await authService.disable2FA(password);\n      setUser(response.user);\n      toast.success(\"2FA disabled successfully\");\n      return { success: true };\n    } catch (error) {\n      toast.error(error.response?.data?.error || \"Failed to disable 2FA\");\n      throw error;\n    }\n  };\n\n\n  const value = {\n    user,\n    loading,\n    pending2FA,\n    pending2FAEmail,\n    login,\n    verify2FA,\n    register,\n    logout,\n    updateProfile,\n    setup2FA,\n    verify2FASetup,\n    disable2FA,\n    changePassword,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}